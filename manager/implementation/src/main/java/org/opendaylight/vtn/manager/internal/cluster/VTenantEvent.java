/*
 * Copyright (c) 2013, 2015 NEC Corporation.  All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v1.0 which accompanies this distribution,
 * and is available at http://www.eclipse.org/legal/epl-v10.html
 */

package org.opendaylight.vtn.manager.internal.cluster;

import org.opendaylight.vtn.manager.VTenant;
import org.opendaylight.vtn.manager.VTenantPath;
import org.opendaylight.vtn.manager.internal.VTNManagerImpl;

import org.opendaylight.controller.sal.core.UpdateType;

/**
 * {@code VTenantEvent} describes an cluster event object which notifies that
 * a virtual tenant was added, modified, or removed.
 *
 * <p>
 *   Although this class is public to other packages, this class does not
 *   provide any API. Applications other than VTN Manager must not use this
 *   class.
 * </p>
 */
public class VTenantEvent extends VNodeEvent {
    /**
     * Version number for serialization.
     */
    private static final long serialVersionUID = 3402130533987207931L;

    /**
     * Construct a new virtual tenant event.
     *
     * @param path     Path to the virtual tenant.
     * @param vtenant  Information about the virtual tenant.
     * @param type     Update type.
     */
    public VTenantEvent(VTenantPath path, VTenant vtenant, UpdateType type) {
        super(path, vtenant, type, true);
    }

    /**
     * Return information about the virtual tenant.
     *
     * @return  Information about the virtual tenant.
     */
    public VTenant getVTenant() {
        return (VTenant)getObject();
    }

    /**
     * Invoked when a cluster event has been received.
     *
     * @param mgr    VTN Manager service.
     * @param local  {@code true} if this event is generated by the local node.
     */
    @Override
    protected void eventReceived(VTNManagerImpl mgr, boolean local) {
        if (!local) {
            // Apply virtual tenant configuration.
            mgr.updateTenant(getPath(), getUpdateType());
        }

        // Deliver this event to listeners.
        notifyEvent(mgr);
    }

    /**
     * Return the name of node type.
     *
     * @return  A string which describes the type of this virtual node.
     */
    @Override
    public String getTypeName() {
        return "virtual tenant";
    }

    /**
     * Deliver this event to {@code IVTNManagerAware} listeners.
     *
     * @param mgr  VTN Manager service.
     */
    @Override
    public void notifyEvent(VTNManagerImpl mgr) {
        VTenantPath path = getPath();
        VTenant vtenant = getVTenant();
        UpdateType type = getUpdateType();
        mgr.notifyListeners(path, vtenant, type);
    }
}
